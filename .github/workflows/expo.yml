name: Deploy-AndExpo

on:
  workflow_dispatch:
    branches: [Development]
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+([0-9]+)'

env:
  APP_CENTER_TOKEN: ${{ secrets.APP_CENTER_TOKEN_MYAPP_ANDROID }}
  APP_NAME: ${{ 'MyApp-Android/ENV_TEST' }}
  TESTING_GROUP: ${{ 'ENV_TEST' }}
  UPLOAD_FILE: ${{ 'android/app/build/outputs/apk/debug/app-debug.apk' }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-node@v1
            with:
              node-version: 14.x
          - uses: actions/setup-java@v1.4.3
            with:
              java-version: '9.0.4' # The JDK version to make available on the path.
              java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
              architecture: x64 # (x64 or x86) - defaults to x64
          - uses: expo/expo-github-action@v5
            with:
              expo-version: 3.x
              expo-cli-token: ${{ secrets.EXPO_CLI_TOKEN }}
          - name: Run Yarn Install
            run: |
                 cd Home-Flavours-GIT
                 npm install yarn         
          - name: Build Android app
            uses: expo/expo-github-action@v5
            with:
              expo-version: '4.x'  # Adjust the version as needed
              expo-cli-token: ${{ secrets.EXPO_CLI_TOKEN }}
              node-version: '14'  # Match with the Node.js version used above
              working-directory: /Home-Flavours-GIT/
          - name: Upload application
            uses: actions/upload-artifact@v2
            with:
              name: app
              path: ./android/app/build/outputs/apk/debug/app-debug.apk
              retention-days: 3
          
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Upload build to App Center
      uses: actions/upload-artifact@v2
      with:
        name: app-build
        path: ${{ env.UPLOAD_FILE }} # Adjust this based on your project's build output directory

    - name: Install App Center CLI
      run: npm install -g appcenter-cli

    - name: Authenticate with App Center
      run: appcenter login --token ${{ secrets.APP_CENTER_TOKEN }}

    - name: Distribute build to App Center
      run: appcenter distribute release --app ${{ secrets.APP_NAME }} --group Developer --file p${{ env.UPLOAD_FILE }} # Adjust this based on your project's build file path
