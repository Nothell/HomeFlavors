name: Deploy-AndExpo1223

on:
  workflow_dispatch:
    branches: [Development]
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+([0-9]+)'

env:
  APP_CENTER_TOKEN: ${{ secrets.APP_CENTER_TOKEN_MYAPP_ANDROID }}
  APP_NAME: 'MyApp-Android/ENV_TEST'
  TESTING_GROUP: 'ENV_TEST'
  UPLOAD_FILE: './android/app/build/outputs/apk/debug/app-debug.apk'
  JAVA_HOME_9.0.4_x64: /opt/hostedtoolcache/jdk/9.0.4/x64
  JAVA_HOME: /opt/hostedtoolcache/jdk/9.0.4/x64
  JAVA_HOME_9_0_4_X64: /opt/hostedtoolcache/jdk/9.0.4/x64
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Set up Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: '9.0.4' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64

      - name: Install Yarn
        run: |
          npm install -g yarn
          yarn install
          
      - name: Install Expo CLI
        run: npm install -g expo-cli

      - name: Log in to Expo
        run: expo login --non-interactive --username haril.boy615@gmail.com
        env:
          EXPO_CLI_PASSWORD: 12345678@
        
      - name: Install eas-cli
        run: |
             npm install -g eas-cli
             npm install expo-dev-client

      - name: Build Android app
        run: |
           cd Home-Flavours-GIT
           eas build -p android --profile preview3 --non-interactive
           # eas build --profile preview3 --platform all --non-interactive

           # Extract build information, Android, and iOS links
           build_json=$(eas build -p android --profile preview3 --non-interactive --json)
           android_link=$(echo $build_json | jq -r '.[] | select(.platform=="ANDROID") | .artifacts.applicationArchiveUrl')
           # ios_link=$(echo $build_json | jq -r '.[] | select(.platform=="IOS") | .artifacts.applicationArchiveUrl')

           # Save the information to a file
           EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
           echo "build_json<<$EOF" >> $GITHUB_OUTPUT
           echo "$build_json" >> $GITHUB_OUTPUT
           echo "$EOF" >> $GITHUB_OUTPUT
           echo "android_link=$android_link" >> $GITHUB_OUTPUT
           # echo "ios_link=$ios_link" >> $GITHUB_OUTPUT

      - name: Save APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: ${{ env.UPLOAD_FILE }}
          
      - name: Install App Center CLI
        run: npm install -g appcenter-cli    

      - name: Authenticate with App Center
        run: appcenter login --token f5af3da87aea380656d92e1f0412acbfc5a3f059 --quiet

      - name: Upload to App Center
        run: |
          cd Home-Flavours-GIT
          cd android
          ls -l
      
